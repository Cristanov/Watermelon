<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="addWatermarkTip" xml:space="preserve">
    <value>Click to add new watermark</value>
  </data>
  <data name="allWatermarks" xml:space="preserve">
    <value>All watermarks</value>
  </data>
  <data name="availableNewVersion" xml:space="preserve">
    <value>There is a new version of Watermelon</value>
  </data>
  <data name="browseDirLab" xml:space="preserve">
    <value>Browse</value>
  </data>
  <data name="browseFolderTip" xml:space="preserve">
    <value>Click to select the folder for saving files</value>
  </data>
  <data name="browseLab" xml:space="preserve">
    <value>Browse</value>
  </data>
  <data name="browseTip" xml:space="preserve">
    <value>Click to select the source graphic watermark</value>
  </data>
  <data name="captionLabel" xml:space="preserve">
    <value>Caption</value>
  </data>
  <data name="captionTip" xml:space="preserve">
    <value>Watermark text</value>
  </data>
  <data name="clearButton" xml:space="preserve">
    <value>CLEAR</value>
  </data>
  <data name="clearTip" xml:space="preserve">
    <value>Removes all images from the collection</value>
  </data>
  <data name="clickToUpdate" xml:space="preserve">
    <value>Click to update.</value>
  </data>
  <data name="colorLab" xml:space="preserve">
    <value>Color:</value>
  </data>
  <data name="colorTip" xml:space="preserve">
    <value>Select color</value>
  </data>
  <data name="delete" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="deleteTip" xml:space="preserve">
    <value>Removes the image from the collection</value>
  </data>
  <data name="exampleImage" xml:space="preserve">
    <value>image</value>
  </data>
  <data name="exampleText" xml:space="preserve">
    <value>Example text</value>
  </data>
  <data name="fontLab" xml:space="preserve">
    <value>Font:</value>
  </data>
  <data name="fontTip" xml:space="preserve">
    <value>Select font</value>
  </data>
  <data name="graphicTypeWatermark" xml:space="preserve">
    <value>Graphic</value>
  </data>
  <data name="heightLab" xml:space="preserve">
    <value>Height:</value>
  </data>
  <data name="heightTip" xml:space="preserve">
    <value>Enter the height of the watermark in px</value>
  </data>
  <data name="images" xml:space="preserve">
    <value>Images</value>
  </data>
  <data name="imagesAddFiles" xml:space="preserve">
    <value>Click to add files</value>
  </data>
  <data name="imagesAddFilesTip" xml:space="preserve">
    <value>Click to add images</value>
  </data>
  <data name="imagesPanelTip" xml:space="preserve">
    <value>Panel to add images</value>
  </data>
  <data name="langCheckedMessage" xml:space="preserve">
    <value>You must restart the program.</value>
  </data>
  <data name="language" xml:space="preserve">
    <value>Language</value>
  </data>
  <data name="nameResultFiles" xml:space="preserve">
    <value>The names of output files: "original name" +</value>
  </data>
  <data name="newWatermark" xml:space="preserve">
    <value>New</value>
  </data>
  <data name="nextImageTip" xml:space="preserve">
    <value>Go to the next image</value>
  </data>
  <data name="noImagesMessage" xml:space="preserve">
    <value>There are no images to save!</value>
  </data>
  <data name="noWatermarksMessage" xml:space="preserve">
    <value>There are no watermarks!</value>
  </data>
  <data name="onlyMarked" xml:space="preserve">
    <value>Only marked</value>
  </data>
  <data name="onOff" xml:space="preserve">
    <value>On/Off</value>
  </data>
  <data name="opacityLab" xml:space="preserve">
    <value>Opacity:</value>
  </data>
  <data name="opacityTip" xml:space="preserve">
    <value>Set the opacity of the watermark</value>
  </data>
  <data name="openLab" xml:space="preserve">
    <value>Open</value>
  </data>
  <data name="openTip" xml:space="preserve">
    <value>Open watermark file</value>
  </data>
  <data name="positionLab" xml:space="preserve">
    <value>Position:</value>
  </data>
  <data name="positionTip" xml:space="preserve">
    <value>Click the arrow to set the position of the watermark</value>
  </data>
  <data name="preview" xml:space="preserve">
    <value>Preview</value>
  </data>
  <data name="previewTip" xml:space="preserve">
    <value>Open the image in the default program</value>
  </data>
  <data name="previousImageTip" xml:space="preserve">
    <value>Go to the previous image</value>
  </data>
  <data name="save" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="saveButtonTip" xml:space="preserve">
    <value>Save files</value>
  </data>
  <data name="saveFilesIn" xml:space="preserve">
    <value>Save files in:</value>
  </data>
  <data name="saveLab" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="savePanelTip" xml:space="preserve">
    <value>Save settings panel</value>
  </data>
  <data name="saveWatermarkTip" xml:space="preserve">
    <value>Click to save watermarks.</value>
  </data>
  <data name="settings" xml:space="preserve">
    <value>Settings</value>
  </data>
  <data name="sizeLab" xml:space="preserve">
    <value>Size:</value>
  </data>
  <data name="sizeTip" xml:space="preserve">
    <value>Set the font size</value>
  </data>
  <data name="sourceLab" xml:space="preserve">
    <value>Source:</value>
  </data>
  <data name="successfulSavedMessage" xml:space="preserve">
    <value>Save completed successfully. Recorded images:</value>
  </data>
  <data name="suffixTip" xml:space="preserve">
    <value>The text in this field will be added to the name of the original file</value>
  </data>
  <data name="textTypeWatermark" xml:space="preserve">
    <value>Text</value>
  </data>
  <data name="watermark" xml:space="preserve">
    <value>Watermark</value>
  </data>
  <data name="watermarkPanelTip" xml:space="preserve">
    <value>Watermarks settings panel</value>
  </data>
  <data name="widthLab" xml:space="preserve">
    <value>Width:</value>
  </data>
  <data name="widthTip" xml:space="preserve">
    <value>Enter the width of the watermark in px</value>
  </data>
  <data name="zoomTip" xml:space="preserve">
    <value>Change thumbnail size</value>
  </data>
  <data name="addNewGraphicWatermarkTip" xml:space="preserve">
    <value>Add new graphic watermark</value>
  </data>
  <data name="addNewTextWatermarkTip" xml:space="preserve">
    <value>Add new text watermark</value>
  </data>
  <data name="saveAllWatermarksTip" xml:space="preserve">
    <value>Saves all watermarks to a file</value>
  </data>
  <data name="saveOnlyMarkedTip" xml:space="preserve">
    <value>Saves the currently selected watermark to a file</value>
  </data>
  <data name="aboutLab" xml:space="preserve">
    <value>About</value>
  </data>
  <data name="authorName" xml:space="preserve">
    <value>Author: Marcin Włodarz</value>
  </data>
  <data name="helpLab" xml:space="preserve">
    <value>Help</value>
  </data>
  <data name="siteLab" xml:space="preserve">
    <value>Web site:</value>
  </data>
  <data name="tutorialLab" xml:space="preserve">
    <value>Tutorial</value>
  </data>
  <data name="watermelonVersion" xml:space="preserve">
    <value>Watermelon version:</value>
  </data>
  <data name="fileLab" xml:space="preserve">
    <value>File</value>
  </data>
  <data name="openProjectLab" xml:space="preserve">
    <value>Open project</value>
  </data>
  <data name="saveProjectLab" xml:space="preserve">
    <value>Save project</value>
  </data>
  <data name="saveAsLab" xml:space="preserve">
    <value>Save as</value>
  </data>
  <data name="newLab" xml:space="preserve">
    <value>New project</value>
  </data>
  <data name="doYouWantSaveCurrentProject" xml:space="preserve">
    <value>Do you want to save the current project?</value>
  </data>
  <data name="doYouWantSaveNewProject" xml:space="preserve">
    <value>Do you want save new project?</value>
  </data>
  <data name="doYouWantSaveProject" xml:space="preserve">
    <value>Do you want to save the project?</value>
  </data>
  <data name="projectSaved" xml:space="preserve">
    <value>Project saved:</value>
  </data>
  <data name="saveChanges" xml:space="preserve">
    <value>Save changes?</value>
  </data>
  <data name="DoYouWantSaveChanges" xml:space="preserve">
    <value>Do you want save changes in</value>
  </data>
  <data name="saved" xml:space="preserve">
    <value>Saved</value>
  </data>
</root>